---
import "../styles/global.css";

export interface Props {
  title?: string;
}

const { title = "Jin Wei" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Alegreya+Sans:wght@700;800&family=Fira+Code&family=Kaisei+HarunoUmi:wght@400;700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.15.2/dist/katex.min.css"
      integrity="sha384-MlJdn/WNKDGXveldHDdyRP1R4CTHr3FeuDNfhsLPYrq2t0UBkUdK2jyTnXPEK1NQ"
      crossorigin="anonymous"
    />

    <script is:inline>
      /**
       * Inline script ensures that this runs before page load.
       * This script is used to load the theme/mode of the user on each page load.
       */

      // true => light mode, false => dark mode
      function getInitialColorMode() {
        const persistedColorPreference = window.localStorage.getItem("mode");
        const hasPersistedPreference =
          typeof persistedColorPreference === "string";

        if (hasPersistedPreference) {
          return persistedColorPreference === "light";
        }

        const mql = window.matchMedia("(prefers-color-scheme: dark)");
        const hasMediaQueryPreference = typeof mql.matches === "boolean";
        if (hasMediaQueryPreference) {
          return !mql.matches;
        }

        // Default to light mode.
        return true;
      }

      if (getInitialColorMode()) {
        document.querySelector("html").classList.add("light-mode");
      }
    </script>

    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>
